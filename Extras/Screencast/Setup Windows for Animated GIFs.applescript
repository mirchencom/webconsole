property thePadding : 20global theOriginglobal theWindowCountset theOrigin to originFromAspectRatio()property theAspectRatio : {1132, 200}set theWindows to windowsForApplications({"TextMate", "Web Console"})setupWindows(theWindows)on setupWindows(theWindows)	set theWindowCount to count of theWindows	set theWindowNumber to 0	repeat with aWindow in theWindows		set aWindow's bounds to boundsForWindowNumber(theWindowNumber)		set theWindowNumber to theWindowNumber + 1	end repeatend setupWindowson originFromAspectRatio()	set theScreenBounds to boundsForScreen()	set theScreenHeight to heightOfBounds(theScreenBounds)	set theScreenWidth to widthOfBounds(theScreenBounds)	set theAspectRatioWidth to widthOfDimensions(theAspectRatio)	set theAspectRatioHeight to heightOfDimensions(theAspectRatio)	set theLeft to (theScreenWidth - theAspectRatioWidth) / 2	set theTop to (theScreenHeight - theAspectRatioHeight) / 2	{theLeft, theTop}end originFromAspectRatioon boundsForScreen()	tell application "Finder"		bounds of window of desktop	end tellend boundsForScreenon boundsForWindowNumber(theWindowNumber)	set theLeft to windowLeft(theWindowNumber)	set theRight to windowRight(theWindowNumber)	set theTop to windowTop()	set theBottom to windowBottom()	{theLeft, theTop, theRight, theBottom}end boundsForWindowNumberon windowLeft(theWindowNumber)	set theOffset to (windowWidth() + thePadding) * theWindowNumber	leftOfOrigin(theOrigin) + thePadding + theOffsetend windowLefton windowRight(theWindowNumber)	windowLeft(theWindowNumber) + windowWidth()end windowRighton windowBottom()	topOfOrigin(theOrigin) + heightOfDimensions(theAspectRatio) - thePaddingend windowBottomon windowTop()	topOfOrigin(theOrigin) + thePaddingend windowTopon windowDimensions()	{windowWidth(), windowHeight()}end windowDimensions--on windowHeight()--	heightOfDimensions(theAspectRatio) - totalVerticalPadding()--end windowHeighton windowWidth()	set theTotalAvailableWidth to widthOfDimensions(theAspectRatio) - totalHorizontalPadding()	theTotalAvailableWidth / theWindowCountend windowWidthon totalVerticalPadding()	thePadding * 2end totalVerticalPaddingon totalHorizontalPadding()	thePadding * (2 + theWindowCount - 1)end totalHorizontalPaddingon leftOfOrigin(theOrigin)	the first item of theOriginend leftOfOriginon topOfOrigin(theOrigin)	the last item of theOriginend topOfOriginon widthOfDimensions(theDimensions)	the first item of theDimensionsend widthOfDimensionson heightOfDimensions(theDimensions)	the last item of theDimensionsend heightOfDimensionson widthOfBounds(theBounds)	set theLeft to item 1 of theBounds	set theRight to item 3 of theBounds	theRight - theLeftend widthOfBoundson heightOfBounds(theBounds)	set theTop to item 2 of theBounds	set theBottom to item 4 of theBounds	theBottom - theTopend heightOfBoundson windowsForApplications(theApplicationNames)	set theWindows to {}	repeat with anApplicationName in theApplicationNames		tell application anApplicationName			set the end of theWindows to window 1		end tell	end repeat	return theWindowsend windowsForApplications